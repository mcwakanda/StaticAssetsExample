exports.authenticate = function authenticate (authAPIEndpoint, userAuthKey, username) {	var returnObj = {};	var client = new XMLHttpRequest();	client.open('GET', authAPIEndpoint);	client.setRequestHeader('X-Auth-User', username);	client.setRequestHeader('X-Auth-Key', userAuthKey);	client.send();	returnObj = {				authToken: client.getResponseHeader("X-Auth-Token"),				CDNManagementUrl: client.getResponseHeader("X-CDN-Management-Url"),				storageToken: client.getResponseHeader("X-Storage-Token"),				storageUrl: client.getResponseHeader("X-Storage-Url"),				username: username			};	return returnObj;};exports.createContainer = function createContainer (containerName, CdnEnabled, authObject) {	var response = "";	var client = new XMLHttpRequest();	client.open('PUT', authObject.storageUrl + "/" + containerName);	client.setRequestHeader('X-Auth-Token', authObject.authToken);	client.send();	response = {		status: client.status	}	if(CdnEnabled){		var applyCdn = new XMLHttpRequest();		applyCdn.open('PUT', authObject.CDNManagementUrl + "/" + containerName);		applyCdn.setRequestHeader('X-Auth-Token', authObject.authToken);		applyCdn.setRequestHeader('X-CDN-Enabled', "True");		applyCdn.send();		response.cdnEnabled = true;		response.cdnSslUri = applyCdn.getResponseHeader("X-Cdn-Ssl-Uri");		response.Ttl = applyCdn.getResponseHeader("X-Ttl");		response.cdnUri = applyCdn.getResponseHeader("X-Cdn-Uri");		response.cdnEnabled = applyCdn.getResponseHeader("X-Cdn-Enabled");		response.logRetention = applyCdn.getResponseHeader("X-Log-Retention");		response.cdnStreamingUri = applyCdn.getResponseHeader("X-Cdn-Streaming-Uri");		response.transId = applyCdn.getResponseHeader("X-Trans-Id");	}	return response;};exports.deleteContainer = function deleteContainer (containerName, authObject) {	//TODO: add support for conflict code 409	var response = "";	var client = new XMLHttpRequest();	client.open('DELETE', authObject.storageUrl + "/" + containerName);	client.setRequestHeader('X-Auth-Token', authObj.authToken);	client.setRequestHeader('Content-Type', "image/jpeg");	client.send();	return response;};exports.uploadFile = function uploadFile(containerName, file, fileName, mimeType, authObject){	var response = null;	var client = new XMLHttpRequest();	client.open('PUT', authObject.storageUrl + "/" + containerName + "/" + fileName);	client.setRequestHeader('X-Auth-Token', authObject.authToken);	client.setRequestHeader('Content-Type', mimeType);	client.send(file);	var state = client.readyState;	if(state == 4){		response = {			status: client.status,			fileURL: authObject.storageUrl + "/" + containerName + "/" + fileName		}	}	return response;};